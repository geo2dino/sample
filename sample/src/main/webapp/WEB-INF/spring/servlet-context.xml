<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/**" location="/" />

	<!-- Tiles 
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"> 
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layout.xml</value>
			</list>
		</property>
		<property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SpringBeanPrepareFactory"/>
	</bean>
	-->
	
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5120000" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<bean id="handlerExceptionResolver" class="com.project.sample.fw.handler.HandlerExceptionResolver">
		<property name="order" value="2"/>
	</bean>

	<!-- sample exception	
	<bean id="mappingExceptionResolver" class="com.shoppingis.sbks.fw.exception.MappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.shoppingis.sbks.fw.exception.AdminException">/exception/exception</prop>
			</props>
		</property>
		<property name="defaultErrorView" value="/exception/exception"/>
		<property name="order" value="2"/>
	</bean>
	-->
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/sample/**"/>
			<mvc:exclude-mapping path="/api/**"/>
			<bean class="com.project.sample.fw.interceptor.WebInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**"/>
			<mvc:exclude-mapping path="/api/**"/>
			<bean class="com.project.sample.fw.interceptor.AdminInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/mobile/**"/>
			<mvc:exclude-mapping path="/api/**"/>
			<bean class="com.project.sample.fw.interceptor.MobileInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/api/**"/>
			<mvc:exclude-mapping path="/admin/**"/>
			<mvc:exclude-mapping path="/mobile/**"/>
			<bean class="com.project.sample.fw.interceptor.ApiInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<context:annotation-config />
	
	<context:component-scan base-package="com.project.sample" />
	
</beans>
